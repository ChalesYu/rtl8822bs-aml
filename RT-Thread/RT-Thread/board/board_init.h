/****************************************Copyright (c)****************************************************
**                             成 都 世 纪 华 宁 科 技 有 限 公 司
**                                http://www.huaning-iot.com
**                                http://hichard.taobao.com
**
**
**--------------File Info---------------------------------------------------------------------------------
** File Name:           board_init.h
** Last modified Date:  2014-12-23
** Last Version:        v1.00
** Description:         目标板初始化头文件声明
**--------------------------------------------------------------------------------------------------------
** Created By:          Renhaibo
** Created date:        2014-12-23
** Version:             v1.00
** Descriptions:        
**--------------------------------------------------------------------------------------------------------
** Modified by:         
** Modified date:       
** Version:             
** Description:         
*********************************************************************************************************/
#ifndef __BOARD_INIT_H__
#define __BOARD_INIT_H__

#ifdef __cplusplus
extern "C" {
#endif

/*********************************************************************************************************
**  是否定义专用的堆栈内存, 
*********************************************************************************************************/
#define STM32_HEAP_RAM         1
#define STM32_HEAP_SDRAM       0

/*********************************************************************************************************
**  动态分配内存区域定义
*********************************************************************************************************/
// Heap mem定义
#if STM32_HEAP_RAM
#define STM32_HEAP_RAM_SIZE     64
#define STM32_HEAP_RAM_START    0x10000000
#define STM32_HEAP_RAM_END      (STM32_HEAP_RAM_START  + STM32_HEAP_RAM_SIZE * 1024)
#endif
  
// 通用RAM定义
#define STM32_HEAP_START        __segment_end("HEAP")
#if (STM32_HEAP_SDRAM > 0)
#define STM32_HEAP_SIZE         32*1024*1024
#define STM32_HEAP_END         (0x80000000  + STM32_HEAP_SIZE)
#else
#define STM32_HEAP_SIZE         512*1024
#define STM32_HEAP_END         (0x24000000  + STM32_HEAP_SIZE)
#endif
/*********************************************************************************************************
**  flash自定义control命令
*********************************************************************************************************/
#define RT_FLASH_INFO_GET      0
#define RT_FLASH_ERASE_PAGE    1
#define RT_FLASH_ERASE_ALL     2

/*********************************************************************************************************
**  相关结构体
*********************************************************************************************************/
//  flash属性结构
typedef struct {
  rt_uint32_t page_size;  // 页大小，以字节为单位，这是擦除的基本单位
  rt_uint32_t page_num;   // 页个数
  rt_uint32_t capacity;   // Flash总大小，以字节为单位
}tFlashInfo;

// flash擦除结构
typedef struct {
  rt_uint32_t start;    // 待擦除的page起始编号
  rt_uint32_t num;      //　待擦擦的page个数
}tFlashErase;


/*********************************************************************************************************
**  3轴传感器格式定义
*********************************************************************************************************/
typedef struct {
  rt_int32_t x;
  rt_int32_t y;
  rt_int32_t z;
}t3DData_Int;

typedef struct {
  float x;
  float y;
  float z;
}t3DData_Float;

typedef struct {
  double x;
  double y;
  double z;
}t3DData_Double;

/*********************************************************************************************************
**  实现的外部函数声明
*********************************************************************************************************/
volatile void usdelay(rt_uint32_t u32Val);
void rt_hw_app_jump(rt_uint32_t u32AppAddr);
void rt_hw_board_init(void);
void watchdog_feed(void);


#ifdef __cplusplus
    }
#endif      // __cplusplus
    
#endif      // __BOARD_INIT_H__
/*********************************************************************************************************
END FILE
*********************************************************************************************************/
