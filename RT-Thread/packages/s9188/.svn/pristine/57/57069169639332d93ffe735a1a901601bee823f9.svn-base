/*++

Copyright (c) SCICS Co., Ltd. All rights reserved.

Module Name:
    wf_oids_adapt.c

Abstract:
    OIDs security related.
    
Revision History:
      When        What
    ----------    ----------------------------------------------
    03-06-2021    Created
Notes:

--*/

#include "wf_debug.h"
#include "pcomp.h"

VOID wf_reset_cipher_abilities(PADAPTER pAdapter)
{
	// We set DOT11_AUTH_ALGO_RSNA as default.   2021/04/09
	wf_mib_info_t *mib_info = pAdapter->mib_info;
	ENUM_NLO_CIPHER_ALGORITHM defaultCipher = NLO_CIPHER_ALGO_NONE;

	mib_info->fgTxBcKeyExist = FALSE;
	mib_info->eEncStatus = ENUM_ENCRYPTION3_ENABLED;
	mib_info->auth_mode = AUTH_MODE_OPEN;
	
	wf_set_encryption(pAdapter, TRUE, defaultCipher);
	wf_set_encryption(pAdapter, FALSE, defaultCipher);
	
	wf_set_hw_default_cipher(pAdapter);

	return;
}

VOID wf_set_encryption(PADAPTER pAdapter, BOOLEAN isUnicast, ENUM_NLO_CIPHER_ALGORITHM algoId)
{
	nic_info_st *pnic_info = pAdapter->nic_info;
	wf_mib_info_t *mib_info = pAdapter->mib_info;
	sec_info_st *psec_info = NULL;
	if(pnic_info == NULL || mib_info == NULL) {
		LOG_E("param is NULL");
		return;
	}

	psec_info = pnic_info->sec_info;
	if(psec_info == NULL) {
		LOG_E("param is NULL");
		return;
	}
	
	if (isUnicast) {
		mib_info->HwUnicastCipher = algoId;
		psec_info->dot11PrivacyAlgrthm = algoId;
	}
	else {
		mib_info->HwMulticastCipher = algoId;
		psec_info->dot118021XGrpPrivacy = algoId;
	}
	
	return;
}

VOID wf_set_hw_default_cipher(PADAPTER pAdapter)
{
	nic_info_st *pnic_info = pAdapter->nic_info;
	sec_info_st *sec_info = pnic_info->sec_info;
	wf_mib_info_t *mib_info = pAdapter->mib_info;
	int index;

	sec_info->ndisencryptstatus = wf_ndis802_11EncryptionDisabled;
	sec_info->dot11PrivacyAlgrthm = _NO_PRIVACY_;
	sec_info->dot118021XGrpPrivacy = _NO_PRIVACY_;
	sec_info->dot11AuthAlgrthm = dot11AuthAlgrthm_Open;
	sec_info->ndisauthtype = wf_ndis802_11AuthModeOpen;

	for (index = 0; index < NATIVE_802_11_MAX_KEY_MAPPING_ENTRY; index++)
	{
		mib_info->KeyTable[index].Valid = FALSE;
	}
	return;
}

